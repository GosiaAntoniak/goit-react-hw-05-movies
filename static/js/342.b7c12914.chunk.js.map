{"version":3,"file":"static/js/342.b7c12914.chunk.js","mappings":"+PAsBA,EAnBkB,SAACA,GAOjB,OACE,kBAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOD,MAAME,MAC7BN,EAAMC,SAASG,EAChB,EAGC,WACE,kBAAOG,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,sBAGL,E,QCuCD,EAjDe,WACb,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KAEMC,EAAcJ,EAAaK,IAAI,SAE/BC,EAAiB,mCAAG,WAAOf,GAAP,8EACxBY,GAAa,GADW,mBAGMI,EAAAA,EAAAA,IAAmBhB,GAHzB,OAGhBiB,EAHgB,OAItBV,GAAU,OAAIU,IAJQ,gDAMtBC,QAAQC,IAAR,MANsB,yBAQtBP,GAAa,GARS,4EAAH,sDAmBvB,OAPAQ,EAAAA,EAAAA,YAAU,WACRb,EAAU,IACNM,GACFE,EAAkBF,EAErB,GAAE,CAACA,KAGF,iCACE,SAAC,EAAD,CAAWhB,SAAU,SAACC,GAAD,OAAOY,EAAgB,CAAEV,MAAOF,GAAhC,IACpBa,IAAa,wCACbL,EAAOe,OAAS,GACf,wBACGf,EAAOgB,KAAI,SAACC,GACX,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAK,YAAD,OAAclB,IAApD,SACGc,EAAMK,SAFFL,EAAME,GAMlB,MAGHZ,IAAgBF,IAAa,yDAIpC,C,+LCpDKkB,EAAU,mCACVC,EAAW,gCAEJC,EAAmB,mCAAG,6FAC3B9B,EAD2B,UACf6B,EADe,sCACuBD,GADvB,SAEVG,EAAAA,EAAAA,IAAU/B,GAFA,cAE3BgC,EAF2B,yBAG1BA,EAASC,KAAKC,SAHY,2CAAH,qDAMnBnB,EAAkB,mCAAG,WAAOhB,GAAP,gFAC1BC,EAD0B,UACd6B,EADc,gCACkBD,EADlB,iCACkD7B,EADlD,wCAETgC,EAAAA,EAAAA,IAAU/B,GAFD,cAE1BgC,EAF0B,yBAGzBA,EAASC,KAAKC,SAHW,2CAAH,sDAMlBC,EAAiB,mCAAG,WAAOX,GAAP,gFACzBxB,EADyB,UACb6B,EADa,iBACIL,EADJ,oBACkBI,EADlB,4BAERG,EAAAA,EAAAA,IAAU/B,GAFF,cAEzBgC,EAFyB,yBAGxBA,EAASC,MAHe,2CAAH,sDAMjBG,EAAc,mCAAG,WAAOZ,GAAP,gFACtBxB,EADsB,UACV6B,EADU,iBACOL,EADP,4BAC6BI,EAD7B,4BAELG,EAAAA,EAAAA,IAAU/B,GAFL,cAEtBgC,EAFsB,yBAGrBA,EAASC,KAAKI,MAHO,2CAAH,sDAMdC,EAAiB,mCAAG,WAAOd,GAAP,gFACzBxB,EADyB,UACb6B,EADa,iBACIL,EADJ,4BAC0BI,EAD1B,mCAERG,EAAAA,EAAAA,IAAU/B,GAFF,cAEzBgC,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,qD","sources":["components/Searchbar/Searchbar.js","Pages/Movies.js","Services/Api.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Searchbar = (props) => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const query = e.target.query.value;\n    props.onSubmit(query);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"query\"></input>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useEffect, useState } from \"react\";\nimport { fetchMoviesByQuery } from \"../Services/Api\";\nimport Searchbar from \"../components/Searchbar/Searchbar\";\nimport { Link } from \"react-router-dom\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const actualQuery = searchParams.get(\"query\");\n\n  const showFetchedMovies = async (query) => {\n    setIsLoading(true);\n    try {\n      const fetchedMovies = await fetchMoviesByQuery(query);\n      setMovies([...fetchedMovies]);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setMovies([]);\n    if (actualQuery) {\n      showFetchedMovies(actualQuery);\n    }\n  }, [actualQuery]);\n\n  return (\n    <>\n      <Searchbar onSubmit={(e) => setSearchParams({ query: e })}></Searchbar>\n      {isLoading && <div>Loading...</div>}\n      {movies.length > 0 ? (\n        <ul>\n          {movies.map((movie) => {\n            return (\n              <li key={movie.id}>\n                <Link to={`${movie.id}`} state={{ from: `/movies/?${searchParams}` }}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        actualQuery && !isLoading && <div>Nothing found. Try again.</div>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\nconst API_KEY = \"2d35aacf68326fc00fb2491c8d09831d\";\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\n\nexport const fetchTrendingMovies = async () => {\n  const target = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(target);\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async (query) => {\n  const target = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n  const response = await axios.get(target);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async (id) => {\n  const target = `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(target);\n  return response.data;\n};\n\nexport const fetchMovieCast = async (id) => {\n  const target = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(target);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async (id) => {\n  const target = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(target);\n  return response.data.results;\n};\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesByQuery,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n\nexport default api;\n"],"names":["props","onSubmit","e","preventDefault","query","target","value","type","name","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","actualQuery","get","showFetchedMovies","fetchMoviesByQuery","fetchedMovies","console","log","useEffect","length","map","movie","to","id","state","from","title","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}